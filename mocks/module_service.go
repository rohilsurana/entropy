// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ModuleService is an autogenerated mock type for the ServiceInterface type
type ModuleService struct {
	mock.Mock
}

type ModuleService_Expecter struct {
	mock *mock.Mock
}

func (_m *ModuleService) EXPECT() *ModuleService_Expecter {
	return &ModuleService_Expecter{mock: &_m.Mock}
}

// TriggerSync provides a mock function with given fields: ctx, urn
func (_m *ModuleService) TriggerSync(ctx context.Context, urn string) error {
	ret := _m.Called(ctx, urn)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, urn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ModuleService_TriggerSync_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'TriggerSync'
type ModuleService_TriggerSync_Call struct {
	*mock.Call
}

// TriggerSync is a helper method to define mock.On call
//  - ctx context.Context
//  - urn string
func (_e *ModuleService_Expecter) TriggerSync(ctx interface{}, urn interface{}) *ModuleService_TriggerSync_Call {
	return &ModuleService_TriggerSync_Call{Call: _e.mock.On("TriggerSync", ctx, urn)}
}

func (_c *ModuleService_TriggerSync_Call) Run(run func(ctx context.Context, urn string)) *ModuleService_TriggerSync_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *ModuleService_TriggerSync_Call) Return(_a0 error) *ModuleService_TriggerSync_Call {
	_c.Call.Return(_a0)
	return _c
}
